apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: secrets-store-controller
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: secrets-store-controller
    control-plane: controller-manager
    secrets-store.io/system: "true"
  name: secrets-store-controller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    secrets-store.io/system: "true"
  name: secretproviders.secrets-store.csi.x-k8s.io
spec:
  group: secrets-store.csi.x-k8s.io
  names:
    kind: SecretProvider
    listKind: SecretProviderList
    plural: secretproviders
    singular: secretprovider
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SecretProvider is the Schema for the secretproviders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretProviderSpec defines the desired state of SecretProvider
            properties:
              rotationPollInterval:
                description: RotationPollInterval is the interval at which the controller will poll the provider to get the latest secret version. Defaults to 2 minute.
                type: string
              secretProviderClassName:
                description: SecretProviderClassName is the name of the secret provider class that will be used to access the secret store.
                type: string
              serviceAccountName:
                description: ServiceAccountName is the name of the service account that will be used to access the secret store.
                type: string
              tokenRequests:
                description: TokenRequests is a list of token requests.
                items:
                  description: TokenRequest contains parameters of a service account token.
                  properties:
                    audience:
                      description: Audience is the intended audience of the token in "TokenRequestSpec". It will default to the audiences of kube apiserver.
                      type: string
                    expirationSeconds:
                      description: ExpirationSeconds is the duration of validity of the token in "TokenRequestSpec". It has the same default value of "ExpirationSeconds" in "TokenRequestSpec".
                      format: int64
                      type: integer
                  required:
                  - audience
                  type: object
                type: array
            type: object
          status:
            description: SecretProviderStatus defines the observed state of SecretProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: secrets-store-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: secrets-store-controller
    secrets-store.io/system: "true"
  name: secrets-store-controller-controller-manager
  namespace: secrets-store-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    secrets-store.io/system: "true"
  name: secrets-store-controller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviderclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviders/finalizers
  verbs:
  - update
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviders/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: secrets-store-controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: secrets-store-controller
    secrets-store.io/system: "true"
  name: secrets-store-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secrets-store-controller-manager-role
subjects:
- kind: ServiceAccount
  name: secrets-store-controller-controller-manager
  namespace: secrets-store-controller-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: secrets-store-controller
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: secrets-store-controller
    control-plane: controller-manager
    secrets-store.io/system: "true"
  name: secrets-store-controller-controller-manager
  namespace: secrets-store-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      secrets-store.io/system: "true"
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        secrets-store.io/system: "true"
    spec:
      containers:
      - command:
        - /manager
        image: aramase/secrets-store-controller:v0.0.1
        imagePullPolicy: Always
        args:
        - --provider-volume=/provider
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /provider
          name: provider-sock
      - name: provider-azure
        image: mcr.microsoft.com/oss/azure/secrets-store/provider-azure:v1.4.1
        imagePullPolicy: IfNotPresent
        args:
          - --endpoint=unix:///provider/azure.sock
          - --construct-pem-chain=true
          - --healthz-port=8989
          - --healthz-path=/healthz
          - --healthz-timeout=5s
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8989
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 0
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /provider
          name: provider-sock
      serviceAccountName: secrets-store-controller-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /var/run/secrets-store-csi-providers
          type: DirectoryOrCreate
        name: provider-sock
